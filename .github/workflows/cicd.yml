name: CI-CD


on:
  push:
    branches: [ main ]
    paths: [ "webapp/**" ]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [ main ]
    paths: [ "webapp/**" ]
  workflow_dispatch:

env:
  RESOURCE_GROUP: 'csa-appservice'
  AZURE_WEBAPP_PACKAGE_PATH: '.deploy'
  DOTNET_VERSION: '6.0.x'
  AZURE_WEBAPP_NAME: 'a9ojg5e34mhhluds-wapp'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: hmarr/debug-action@v2

      # Log into Azure
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      # Set up dotnet version
      - uses: actions/setup-dotnet@v1
        name: Setup dotnet
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      # Build the app
      - name: dotnet build and publish
        working-directory: webapp
        run: |
          dotnet restore
          dotnet build --configuration Release
          dotnet publish -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}'

      # Publish build artifact
      - name: publish artifacts
        uses: actions/upload-artifact@v3
        working-directory: webapp
        with:
          name: webapp-dist
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  deploy-slot:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    steps:
      # Log into Azure
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Downloads the build artifact
      - name: download artifact
        uses: actions/download-artifact@v3
        with:
          name: webapp-dist

      # Create App Service slot
      - name: create app service slot
        uses: azure/CLI@v1
        with:
          azcliversion: 2.35.0
          inlineScript: |
            az webapp deployment slot create \
              --name ${{ env.AZURE_WEBAPP_NAME }} \
              --resource-group ${{ env.RESOURCE_GROUP }} \
              --slot pr${{ github.event.number }} \
              --configuration-source ${{ env.AZURE_WEBAPP_NAME }}

      # Deploy to Azure Web apps
      - name: app service deploy
        uses: azure/webapps-deploy@v2
        with:
          slot-name: pr${{ github.event.number }}
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: '.'

  undeploy-slot:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    steps:
      # Log into Azure
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Delete App Service slot when PR is closed
      - name: delete app service slot
        uses: azure/CLI@v1
        with:
          azcliversion: 2.35.0
          inlineScript: |
            az webapp deployment slot delete \
              --name ${{ env.AZURE_WEBAPP_NAME }} \
              --resource-group ${{ env.RESOURCE_GROUP }} \
              --slot pr${{ github.event.number }}

  deploy-prod:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'closed')
    steps:
      # Log into Azure
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Downloads the build artifact
      - name: download artifact
        uses: actions/download-artifact@v3
        with:
          name: webapp-dist

      # Deploy to Azure Web apps
      - name: app service deploy
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: '.'
